{"version":3,"sources":["reducer.tsx","useWallet.tsx","util.tsx","hooks/useWallet.tsx","components/Layout.tsx","Pages/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["locales","require","lang","window","localStorage","getItem","chainIds","Object","keys","networks","map","k","chainId","initial","walletModal","walletSelect","chainIdMatch","rpc","status","address","checking","balance","err","coins","coin","decimals","initialState","L","loading","inited","pending","txs","chain","targetChain","token","value","flashcoins","BSC","process","CRO","POL","ETH","createSlice","name","reducers","update","state","action","payload","undefined","Error","DISCONNECTED","CONNECTING","CONNECTED","ZERO","toEther","v","p","Number","BigInt","AppKey","request","url","params","a","fetch","method","headers","body","JSON","stringify","result","json","console","log","useWallet_","G","useSelector","dispatch","useDispatch","Slice","actions","connected","React","useEffect","getChainId","then","ethereum","on","accountChanged","chainChanged","getPending","buf","parse","check","network","results","net","web3","Web3","eth","getBlockNumber","height","limit","count","length","i","iEnd","push","jsonrpc","id","Accept","response","Array","isArray","blockNumber","_connect","accounts","replace","String","message","newChainId","changeNetwork","val","chainHexId","utils","toHex","res","code","error","connect","addNetwork","call","to","abi","args","contract","Contract","methods","send","isConnected","data","encodeABI","from","matches","match","err1","waitTransaction","txId","repeat","getTransactionReceipt","receipt","resolvedReceipt","Promise","resolve","setTimeout","getBalance","abiFlash","bridgebalance","bridge","approval","approve","deposit","abiBridge","setPending","key","tx","setItem","removePending","setTxs","tips","html","toast","position","autoClose","NETWORK_CHAIN_IDS","INFURA_ENDPOINT","walletconnect","WalletConnectConnector","infuraId","supportedChainIds","qrcode","pollingInterval","injected","InjectedConnector","walletlink","WalletLinkConnector","appName","handleError","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","toString","useWallet","useWeb3React","activate","connector","props","currentProvider","getAccounts","type","isMetaMask","location","href","walletConnectProvider","Layout","active","U","account","useState","isLoading","setIsLoadking","ChainCheck","handleConnect","WalletModal","className","onClick","style","justifyContent","fontSize","src","alt","width","fontWeight","color","marginTop","slice","children","target","Networks","Home","refAmount","useRef","flashPrice","setFlashprice","countFlashPrice","setCountFlashPrice","query","submitLabel","setStatus","providerFee","protocalFee","slippage","fee","receiveValue","txDetail","setTxDetail","isPending","noTargetChain","setNotargetChain","tokenSelectModal","setTokenSelectModal","isActive","setIsActive","isTransaction","setIsTransaction","img","selectedTokenOnChain","setSelectedTokenOnChain","selectedTokenOnTargetChain","setSelectedTokenOnTargetChain","prices","gasPrices","maxGasLimit","base","setBase","updateStatus","timer","checkPending","clearTimeout","Date","time","setTime","getInfo","Math","round","onChangeValueOnChain","attrs","feeEther","FLASHprice","priceresult","accuracyPoints","ypoint","settlementPrice","toFixed","InputChainInfo","info","fake_dis","setFake_dis","swapChains","params1","params2","confirmations","all","now","getTime","created","rows","onChangeValue","submit","targetToken","amount","decimal","rbalance","rbalance1","balance1","success","rApproval","current","focus","chainSelectActive","ChainActive","document","getElementById","classList","remove","add","CallTokenSelect","para","toLocaleLowerCase","TokenSelectNameImageUpdate","TokenSelect","margin","borderTop","background","padding","innerWidth","innerHeight","VirtualNetworks","e","onChangeNetwork","onChangeNetwork2","ref","borderRadius","toLowerCase","TokenList","index","pendingTxs","supported","sort","b","marginLeft","border","onChange","backgroundColor","erc20","paddingTop","disabled","maxHeight","overflowY","marginRight","explorer","rel","title","textAlign","cursor","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","config","ReactDOM","render","StrictMode","getLibrary","provider","library","Web3Provider"],"mappings":"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","file":"static/js/main.93b63274.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport networks from './config/networks.json'\r\n\r\nconst locales = {\r\n\t\"en-US\": require('./locales/en-US.json'),\r\n\t\"zh-CN\": require('./locales/zh-CN.json'),\r\n};\r\n\r\nconst lang = window.localStorage.getItem('lang') || 'en-US';\r\nconst DEFAULT_NET = 'BSC'\r\n\r\nconst chainIds = {};\r\nObject.keys(networks).map(k => chainIds[networks[k].chainId] = k);\r\n\r\nconst initial: WalletTypes = {\r\n\twalletModal: false,\r\n\twalletSelect: '',\r\n\tchainIds,\r\n\tchainId: networks[DEFAULT_NET].chainId,\r\n\tchainIdMatch: 56,\r\n\trpc: networks[DEFAULT_NET].rpc,\r\n\tstatus: 'disconnected',\r\n\taddress: '',\r\n\tchecking: false,\r\n\tbalance: '',\r\n\terr: '',\r\n}\r\n\r\nconst coins: CoinTypes = {}\r\nfor (let k in networks) {\r\n\tcoins[networks[k].coin] = { [k]: { address: '-', decimals: networks[k].decimals } }\r\n}\r\n\r\nconst initialState: BridgeTypes = {\r\n\tlang,\r\n\tL: locales[lang],\r\n\r\n\tcoins,\r\n\tloading: false,\r\n\tinited: false,\r\n\tpending: {},\r\n\ttxs: {},\r\n\t...initial,\r\n\tchain: 'BSC',\r\n\ttargetChain: 'POL',\r\n\ttoken: 'FLASH',\r\n\tvalue: '0001',\r\n\tflashcoins: {\r\n\t\tBSC: {\r\n\t\t\tdecimals: 18,\r\n\t\t\taddress: process.env.REACT_APP_ADDRESS_BSC\r\n\t\t},\r\n\t\tCRO: {\r\n\t\t\tdecimals: 18,\r\n\t\t\taddress: process.env.REACT_APP_ADDRESS_CRO\r\n\t\t},\r\n\t\tPOL: {\r\n\t\t\tdecimals: 18,\r\n\t\t\taddress: process.env.REACT_APP_ADDRESS_POL\r\n\t\t},\r\n\t\tETH: {\r\n\t\t\tdecimals: 18,\r\n\t\t\taddress: process.env.REACT_APP_ADDRESS_ETH\r\n\t\t},\r\n\t},\r\n}\r\n//I should automatically create a flashcoins object.\r\n//Current flashcoins is created statically\r\n\r\nexport default createSlice({\r\n\tname: 'bridge',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tupdate: (state: any, action) => {\r\n\t\t\tfor (const k in action.payload) {\r\n\t\t\t\tif (state[k] === undefined) new Error('  undefined account item')\r\n\t\t\t\tstate[k] = action.payload[k]\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport abiFlash from './config/abis/FlashToken.json';\r\nimport abiBridge from './config/abis/Bridge.json'\r\nimport networks from './config/networks.json'\r\nimport Slice from './reducer'\r\n/* import Web3 \t\t\t\t\t\tfrom 'web3' */\r\n\r\nexport const DISCONNECTED = 'disconnected';\r\nexport const CONNECTING = 'connecting';\r\nexport const CONNECTED = 'connected';\r\n/* export const getWeb3 = ()=>window.Web3; */\r\nexport const ZERO = \"0x0000000000000000000000000000000000000000\"\r\nexport const toHex = (val: string | number): string => new window.Web3().utils.toHex(val)\r\nexport const validAddress = (address: string): boolean => new window.Web3().isAddress(address)\r\nexport const fromEther = (v: number, p?: number) => '0x' + (BigInt(Math.round(v * 1e6)) * BigInt(10 ** ((p || 18) - 6))).toString(16)\r\nexport const toEther = (v: number | string, p?: number) => Number(BigInt(v) / BigInt(10 ** ((p || 18) - 6))) / 1e6\r\n\r\nconst AppKey = process.env.REACT_APP_GTAG || ''\r\nconst proxy = process.env.REACT_APP_ENDPOINT || ''\r\nconst ERR_INSTALL = '  You must install Metamask into your browser: https://metamask.io/download.html'\r\nconst ERR_DISCONNECTED = '  walllet disconnected'\r\nconst ERR_NOACCOUNTS = '  No selected address.'\r\nconst ERR_UNKNOWN = '  Unknown error'\r\nconst ERR_ASKCONNECT = '  Connect to Metamask using the button on the top right.'\r\nconst ERR_CANCELLED = '  You cancelled requested operation.'\r\nconst ERR_CHAINID = '  Invalid chain id #:chainId'\r\n\r\n\r\nexport const request = async (url: string, params?: any): Promise<ServerResponse | null> => {\r\n\ttry {\r\n\t\tconst result = await fetch(proxy + url,\r\n\t\t\t{\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: { 'content-type': 'application/json' },\r\n\t\t\t\tbody: params ? JSON.stringify(params) : null\r\n\t\t\t});\r\n\t\treturn await result.json();\r\n\t} catch (error) {\r\n\t\tconsole.log(error)\r\n\t}\r\n\treturn null\r\n}\r\n\r\nconst useWallet_ = (): UseWalletTypes => {\r\n\tconst G = useSelector((state: BridgeTypes) => state)\r\n\tconst L = G.L\r\n\tconst dispatch = useDispatch()\r\n\tconst update = (payload: { [key: string]: any }) => {\r\n\t\tdispatch(Slice.actions.update(payload))\r\n\t}\r\n\tconst connected = G.status === CONNECTED;\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif (connected) {\r\n\t\t\tgetChainId().then(chainId => {\r\n\t\t\t\tif (chainId === networks[G.chain].chainId) {\r\n\t\t\t\t\tupdate({ status: CONNECTED })\r\n\t\t\t\t} else {\r\n\t\t\t\t\tupdate({ status: DISCONNECTED, err: ERR_DISCONNECTED })\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}, [G.chainId, connected])\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst { ethereum } = window\r\n\t\tif (ethereum && connected) {\r\n\t\t\tethereum.on('accountsChanged', accountChanged)\r\n\t\t\tethereum.on('chainChanged', chainChanged)\r\n\t\t}\r\n\t})\r\n\r\n\tconst getPending = (): { pending: PendingTypes, txs: TxTypes } => {\r\n\t\tlet pending: PendingTypes = {}\r\n\t\tlet txs: TxTypes = {}\r\n\t\ttry {\r\n\t\t\tlet buf = window.localStorage.getItem(AppKey)\r\n\t\t\tif (buf) pending = JSON.parse(buf)\r\n\t\t\tbuf = window.localStorage.getItem(AppKey + '-txs')\r\n\t\t\tif (buf) txs = JSON.parse(buf)\r\n\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err)\r\n\t\t}\r\n\t\treturn { pending, txs }\r\n\t}\r\n\r\n\tconst setPending = (key: string, tx: PendingType) => {\r\n\t\tconst pending: PendingTypes = { ...G.pending, [key]: tx }\r\n\t\twindow.localStorage.setItem(AppKey, JSON.stringify(pending))\r\n\t\tupdate({ pending })\r\n\t}\r\n\tconst setTxs = (txs: TxTypes) => {\r\n\t\twindow.localStorage.setItem(AppKey + '-txs', JSON.stringify(txs))\r\n\t\tupdate({ txs })\r\n\t}\r\n\r\n\tconst check = async (network: string, txs: Array<string>): Promise<{ [txId: string]: number }> => {\r\n\t\tconst results: { [txId: string]: number } = {}\r\n\t\tconst net = networks[network]\r\n\t\tconst web3 = new window.Web3(net.rpc)\r\n\t\tconst height = await web3.eth.getBlockNumber()\r\n\t\tconst limit = 20\r\n\t\tconst count = txs.length\r\n\t\tfor (let i = 0; i < count; i += limit) {\r\n\t\t\tconst json: Array<{ jsonrpc: string, method: string, params: Array<string>, id: number }> = []\r\n\t\t\tlet iEnd = i + limit\r\n\t\t\tif (iEnd > count) iEnd = count\r\n\t\t\tfor (let k = i; k < iEnd; k++) {\r\n\t\t\t\tjson.push({ jsonrpc: '2.0', method: 'eth_getTransactionReceipt', params: [txs[k]], id: k++ })\r\n\t\t\t}\r\n\t\t\tconst response = await fetch(net.rpc, {\r\n\t\t\t\tbody: JSON.stringify(json),\r\n\t\t\t\theaders: { Accept: \"application/json\", \"Content-Type\": \"application/json\" },\r\n\t\t\t\tmethod: \"POST\"\r\n\t\t\t})\r\n\t\t\tconst result = await response.json();\r\n\t\t\tif (result !== null && Array.isArray(result)) {\r\n\t\t\t\tfor (let v of result) {\r\n\t\t\t\t\tresults[txs[v.id]] = v.result && v.result.status === '0x1' ? height - Number(v.result.blockNumber) + 1 : -1\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn results\r\n\t}\r\n\tconst removePending = (txId: string) => {\r\n\t\ttry {\r\n\t\t\tlet pending = getPending()\r\n\t\t\tdelete pending[txId]\r\n\t\t\twindow.localStorage.setItem(AppKey, JSON.stringify(pending))\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err)\r\n\t\t}\r\n\t}\r\n\r\n\tconst _connect = async (accounts?: Array<string>) => {\r\n\t\tlet err = '';\r\n\t\ttry {\r\n\t\t\tconst { ethereum } = window\r\n\t\t\tupdate({ status: CONNECTING, err: '' })\r\n\t\t\tif (ethereum) {\r\n\t\t\t\tif (accounts === undefined) accounts = await ethereum.request({ method: 'eth_requestAccounts' })\r\n\r\n\t\t\t\tif (accounts && accounts.length) {\r\n\t\t\t\t\tconst chainId = await getChainId();//wallet connected chainId\r\n\t\t\t\t\tif (chainId === networks[G.chain].chainId) {\r\n\t\t\t\t\t\tupdate({ status: CONNECTED, address: accounts[0], err: '' })\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\terr = ERR_CHAINID.replace(':chainId', String(chainId))\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\terr = ERR_NOACCOUNTS\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\terr = ERR_INSTALL\r\n\t\t\t}\r\n\t\t} catch (error: any) {\r\n\t\t\terr = '  ' + error.message\r\n\t\t}\r\n\t\tupdate({ status: DISCONNECTED, address: '', err })\r\n\t}\r\n\tconst getChainId = async () => {\r\n\t\tconst { ethereum } = window\r\n\t\tif (ethereum) {\r\n\t\t\treturn Number(await ethereum.request({ method: 'eth_chainId' }));\r\n\t\t}\r\n\t\treturn 0\r\n\t}\r\n\tconst accountChanged = async (accounts: any) => {\r\n\t\tif (connected) {\r\n\t\t\t_connect(accounts);\r\n\t\t}\r\n\t}\r\n\r\n\tconst chainChanged = async (newChainId) => {\r\n\t\tif (connected) {\r\n\t\t\t_connect();\r\n\t\t}\r\n\t}\r\n\r\n\tconst changeNetwork = async (chainId: number) => {\r\n\t\tif (window.ethereum) {\r\n\t\t\ttry {\r\n\t\t\t\tlet chainHexId = toHex(chainId);\r\n\t\t\t\tlet res = await window.ethereum.request({\r\n\t\t\t\t\tmethod: 'wallet_switchEthereumChain',\r\n\t\t\t\t\tparams: [{ chainId: chainHexId }],\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log(res.code);\r\n\t\t\t\tif (res.code === 4001) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (error: any) {\r\n\r\n\t\t\t\tconsole.error('changeNetwork');\r\n\t\t\t\tconsole.error(error);\r\n\t\t\t\tif (error.code === 4001) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst connect = async (): Promise<void> => {\r\n\t\t_connect();\r\n\t}\r\n\tconst addNetwork = async () => {\r\n\t\tconst { ethereum } = window\r\n\t\t// if (ethereum) {\r\n\t\t// \tethereum.request({\r\n\t\t// \t\tmethod: 'wallet_addEthereumChain',\r\n\t\t// \t\tparams: [{\r\n\t\t// \t\t\tchainId: toHex(networks.ICICB.chainId),\r\n\t\t// \t\t\tchainName: L['chain.icicb'],\r\n\t\t// \t\t\tnativeCurrency: {\r\n\t\t// \t\t\t\tname: 'ICICB Coin',\r\n\t\t// \t\t\t\tsymbol: 'ICICB',\r\n\t\t// \t\t\t\tdecimals: 18\r\n\t\t// \t\t\t},\r\n\t\t// \t\t\trpcUrls: [networks.ICICB.rpc],\r\n\t\t// \t\t\tblockExplorerUrls: [networks.ICICB.explorer]\r\n\t\t// \t\t}]\r\n\t\t// \t}).catch((error) => {\r\n\t\t// \t\tconsole.log(error)\r\n\t\t// \t})\r\n\t\t// }\r\n\r\n\t}\r\n\r\n\tconst call = async (to: string, abi: any, method: string, args: Array<string | number | boolean>, rpc?: string): Promise<any> => {\r\n\r\n\t\tconst web3 = new window.Web3(rpc || G.rpc)\r\n\t\tconst contract = new web3.eth.Contract(abi, to)\r\n\t\tconsole.log('contract.methods[method](...args).call()')\r\n\t\t// return await call(token, abiFlash, 'balanceOf', [G.address])\r\n\r\n\t\tconsole.log(contract.methods[method](...args).call())\r\n\t\treturn await contract.methods[method](...args).call()\r\n\t}\r\n\r\n\tconst send = async (to: string, abi: any, value: string, method: string, args: Array<string | number | boolean>): Promise<string | undefined> => {\r\n\t\tlet err = '';\r\n\t\ttry {\r\n\t\t\tconst { ethereum } = window\r\n\t\t\tif (ethereum && ethereum.isConnected) {\r\n\t\t\t\tconst web3 = new window.Web3(ethereum)\r\n\t\t\t\tconst contract = new web3.eth.Contract(abi, to)\r\n\t\t\t\tconst data = contract.methods[method](...args).encodeABI()\r\n\t\t\t\tconst json = { from: G.address, to, value, data }\r\n\t\t\t\tconst res = await ethereum.request({ method: 'eth_sendTransaction', params: [json] })\r\n\t\t\t\tif (res) return res\r\n\t\t\t\terr = ERR_UNKNOWN\r\n\t\t\t} else {\r\n\t\t\t\terr = ERR_ASKCONNECT\r\n\t\t\t}\r\n\t\t} catch (error: any) {\r\n\t\t\tif (error.code === 4001) {\r\n\t\t\t\terr = ERR_CANCELLED\r\n\t\t\t} else if (error.code === -32603) {\r\n\t\t\t\tconst matches = error.message.match(/'(\\{[^']*\\})'/)\r\n\t\t\t\tif (matches.length === 2) {\r\n\t\t\t\t\tlet json: any;\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tjson = JSON.parse(matches[1])\r\n\t\t\t\t\t\tif (json.value && json.value.data) {\r\n\t\t\t\t\t\t\tconst { code, message } = json.value.data\r\n\t\t\t\t\t\t\terr = '  ' + message + ' (' + code + ')'\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\terr = '  ' + error.message\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch (err1) {\r\n\t\t\t\t\t\terr = '  ' + error.message\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\terr = '  ' + error.message\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\terr = '  ' + error.message\r\n\t\t\t}\r\n\t\t}\r\n\t\tthrow new Error(err)\r\n\t}\r\n\r\n\tconst waitTransaction = async (txId: string): Promise<boolean> => {\r\n\t\tconst web3 = new window.Web3(G.rpc)\r\n\t\tlet repeat = 100\r\n\t\twhile (--repeat > 0) {\r\n\t\t\tconst receipt = await web3.eth.getTransactionReceipt(txId)\r\n\t\t\tif (receipt) {\r\n\t\t\t\tconst resolvedReceipt = await receipt\r\n\t\t\t\tif (resolvedReceipt && resolvedReceipt.blockNumber) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tawait new Promise((resolve) => setTimeout(resolve, 3000))\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconst balance = async (token: string): Promise<string | undefined> => {\r\n\t\tconst web3 = new window.Web3(G.rpc)\r\n\t\tif (token === '-') {\r\n\t\t\treturn await web3.eth.getBalance(G.address)\r\n\t\t} else {\r\n\t\t\treturn await call(token, abiFlash, 'balanceOf', [G.address])\r\n\t\t}\r\n\t}\r\n\tconst bridgebalance = async (chain: string, token: string): Promise<string | undefined> => {\r\n\t\tconst net = networks[chain]\r\n\r\n\t\tif (token === '-') {\r\n\t\t\tconst web3 = new window.Web3(net.rpc)\r\n\t\t\treturn await web3.eth.getBalance(net.bridge)\r\n\t\t} else {\r\n\t\t\treturn await call(token, abiFlash, 'balanceOf', [net.bridge], net.rpc)\r\n\t\t}\r\n\t}\r\n\r\n\tconst approval = async (token: string): Promise<string | undefined> => {\r\n\t\treturn await call(token, abiFlash, 'allowance', [G.address, networks[G.chain].bridge])\r\n\t}\r\n\r\n\tconst approve = async (token: string, value: string): Promise<string | undefined> => {\r\n\t\treturn await send(token, abiFlash, '0x0', 'approve', [networks[G.chain].bridge, value])\r\n\t}\r\n\r\n\tconst deposit = async (token: string, value: string, targetChain: number): Promise<string | undefined> => {\r\n\t\t// const tx = await G.deposit(token.address==='-' ? ZERO : token.address, value, networks[G.targetChain].chainId)\r\n\t\treturn await send(networks[G.chain].bridge, abiBridge, token === ZERO ? value : '0x0', 'deposit', [token, value, targetChain])\r\n\t}\r\n\r\n\treturn { ...G, update, check, addNetwork, changeNetwork, getPending, setPending, removePending, setTxs, connect, balance, bridgebalance, waitTransaction, approval, approve, /* depositToIcicb,  */deposit };\r\n}\r\n\r\nexport default useWallet_\r\n","import { toast } from 'react-toastify';\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\r\nimport { InjectedConnector } from '@web3-react/injected-connector';\r\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector';\r\n\r\n\r\nexport const errHandler = (err: any) => {\r\n\tif (err) {\r\n\t\tconsole.log(err)\r\n\t\tif (err.code === 4001) {\r\n\t\t\ttips(\"you have cancelled the subscription\")\r\n\t\t} else if (err.code === 'NETWORK_ERROR') {\r\n\t\t\ttips(\"Please check your network connection!\")\r\n\t\t} else {\r\n\t\t\ttips(err.message)\r\n\t\t}\r\n\t} else {\r\n\t\tconsole.log(\"ignorant error\")\r\n\t\ttips(\"ignorant error\")\r\n\t}\r\n}\r\n\r\nexport const tips = (html: string) => {\r\n\ttoast(html, {\r\n\t\tposition: \"top-right\",\r\n\t\tautoClose: 4000,\r\n\t});\r\n}\r\nexport const NF = (num: number, p: number = 2) => Number(num).toFixed(p).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\nexport const TF = (time: number, offset: number = 2) => {\r\n\tlet iOffset = Number(offset);\r\n\tlet date = time === undefined ? new Date(Date.now() * 1000 + (3600000 * iOffset)) : (typeof time === 'number' ? new Date(time * 1000 + (3600000 * iOffset)) : new Date(+time + (3600000 * iOffset)));\r\n\tlet y = date.getUTCFullYear();\r\n\tlet m = date.getUTCMonth() + 1;\r\n\tlet d = date.getUTCDate();\r\n\tlet hh = date.getUTCHours();\r\n\tlet mm = date.getUTCMinutes();\r\n\tlet ss = date.getUTCSeconds();\r\n\tlet dt = (\"0\" + m).slice(-2) + \"-\" + (\"0\" + d).slice(-2);\r\n\tlet tt = (\"0\" + hh).slice(-2) + \":\" + (\"0\" + mm).slice(-2) + \":\" + (\"0\" + ss).slice(-2);\r\n\treturn y + '-' + dt + ' ' + tt;\r\n}\r\n\r\nexport const copyToClipboard = (text: string) => {\r\n\tvar textField = document.createElement('textarea')\r\n\ttextField.innerText = text\r\n\tdocument.body.appendChild(textField)\r\n\ttextField.select()\r\n\tdocument.execCommand('copy')\r\n\ttextField.remove()\r\n\ttips(text);\r\n};\r\n\r\n\r\n\r\n// export const NETWORK_CHAIN_IDS = {\r\n// \tbsc: 56,\r\n// \tpolygon: 137,\r\n// \tavalanch: 43114,\r\n// \tetherum: 1,\r\n// \tfantom: 250,\r\n// \tcronos: 25,\r\n// \tabitrum: 42161,\r\n// \taurora: 1313161554,\r\n// \tmoonriver: 1285,\r\n// \thamony: 1666600000,\r\n// \tMoonbeam: 1284,\r\n// \tropsten: 3,\r\n// \trinkeby: 4,\r\n// \tgoerli: 5,\r\n// \tkovan: 42,\r\n// \tlocalhost: 1337,\r\n// \tpolygon_test: 80001,\r\n// \tbsc_test: 97,\r\n// \tcronos_test: 338,\r\n\r\n//algorand , polkadot\r\n// };\r\nexport const NETWORK_CHAIN_IDS = [56, 137, 43114, 1, 250, 25, 42161, 1313161554, 1285, 1666600000, 1284, 3, 4, 5, 42, 1337, 80001, 97, 338];\r\n\r\nexport const INFURA_ID = '9aa3d95b3bc440fa88ea12eaa4456161';\r\nexport const INFURA_ENDPOINT = 'https://mainnet.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161';\r\nexport const walletconnect = new WalletConnectConnector({\r\n\tinfuraId: INFURA_ID,\r\n\tbridge: 'https://bridge.walletconnect.org',\r\n\tsupportedChainIds: NETWORK_CHAIN_IDS,\r\n\trpc: { 1: INFURA_ENDPOINT },\r\n\tqrcode: true,\r\n\t// @ts-ignore\r\n\tpollingInterval: 8000,\r\n});\r\n\r\nexport const injected = new InjectedConnector({\r\n\tsupportedChainIds: NETWORK_CHAIN_IDS\r\n});\r\n\r\nexport const walletlink = new WalletLinkConnector({\r\n\turl: INFURA_ENDPOINT,\r\n\tappName: 'Flash Bridge',\r\n\tsupportedChainIds: NETWORK_CHAIN_IDS,\r\n});\r\n","import { useWeb3React, UnsupportedChainIdError } from '@web3-react/core';\r\n\r\nimport { injected, walletconnect, walletlink, tips } from '../util';\r\nimport Web3 from 'web3';\r\nimport {\r\n    NoEthereumProviderError,\r\n    UserRejectedRequestError as UserRejectedRequestErrorInjected,\r\n} from '@web3-react/injected-connector';\r\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector';\r\nimport { useEffect } from 'react';\r\n\r\nconst handleError = (error: any) => {\r\n    if (error instanceof NoEthereumProviderError) {\r\n        return tips(\r\n            'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\r\n        );\r\n    } else if (error instanceof UnsupportedChainIdError) {\r\n        return tips(\"Network Error, Please connect to BSC Mainnet\");\r\n        console.log(error);\r\n    } else if (\r\n        error instanceof UserRejectedRequestErrorInjected ||\r\n        error instanceof UserRejectedRequestErrorWalletConnect\r\n    ) {\r\n        return tips('Please authorize this website to access your BSC account.');\r\n    } else if ((error).code === -32002) {\r\n        return tips('Already processing ethereum request Accounts. Please accept the request.');\r\n    } else {\r\n        console.error(error.toString());\r\n        return tips('An unknown error occurred. Check the console for more details.');\r\n    }\r\n};\r\n\r\nexport const useWallet = () => {\r\n    const { activate, connector, ...props } = useWeb3React();\r\n    useEffect(() => {\r\n        const { ethereum } = window;\r\n\r\n        if (ethereum) {\r\n            (async () => {\r\n                try {\r\n                    // @ts-ignore\r\n                    const web3 = new Web3(ethereum.currentProvider || (window).web3.currentProvider);\r\n\r\n                    const accounts = await web3.eth.getAccounts();\r\n                    if (accounts.length > 0) {\r\n                        await activate(injected, (error) => handleError(error));\r\n                    } else if (accounts.length > 0) {\r\n                        return tips('Please Connect Metamask Wallet');\r\n                    }\r\n                } catch (err) {\r\n                    // Handle Error\r\n                    handleError(err);\r\n                }\r\n            })();\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    const connect = async (type: any) => {\r\n        try {\r\n\r\n            if (type === 'injected') {\r\n                const { ethereum } = window;\r\n                // @ts-ignore\r\n                if (window.web3.currentProvider.isMetaMask) {\r\n                    console.log(\"Metamask is installed\");\r\n                } else {\r\n                    window.location.href = \"https://metamask.io/download\";\r\n                }\r\n                if (!ethereum) {\r\n                    return tips(\r\n                        'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\r\n                    );\r\n                }\r\n                return await activate(injected, undefined, true);\r\n            }\r\n\r\n            if (type === 'walletconnect') {\r\n                console.log(\"wallet connection\", walletconnect);\r\n                // @ts-ignore\r\n                return await activate(walletconnect, undefined, true, (error) => handleError(error));\r\n            }\r\n\r\n            if (type === 'walletlink') {\r\n                // @ts-ignore\r\n                return await activate(walletlink, undefined, true, (error) => handleError(error));\r\n            }\r\n        } catch (err) {\r\n            console.log('Connect wallet err', err);\r\n\r\n            // @ts-ignore\r\n            walletconnect.walletConnectProvider = null;\r\n            handleError(err);\r\n\r\n        }\r\n    };\r\n\r\n    return { ...props, connector, connect };\r\n};\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from 'react-redux';\r\nimport './layout.scss';\r\nimport useWallet_, { request } from '../useWallet';\r\nimport { useWallet } from '../hooks/useWallet';\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core';\r\nimport networks from \"../config/networks.json\";\r\nimport { AiOutlineLinkedin, AiOutlineClose } from \"react-icons/ai\";\r\nimport { readSync } from 'fs';\r\nimport { tips } from '../util';\r\n\r\nconst ERR_INSTALL = '  You must install Metamask into your browser: https://metamask.io/download.html'\r\nconst ERR_NOACCOUNTS = '  No selected address.'\r\nconst ERR_CHAINID = '  Invalid chain id #:chainId'\r\nconst DISCONNECTED = 'disconnected';\r\nconst CONNECTING = 'connecting';\r\nconst CONNECTED = 'connected';\r\n\r\nconst Layout = (props: any) => {\r\n    const { active, connect, chainId } = useWallet();\r\n    const U = useWallet_();\r\n    const { account } = useWeb3React();\r\n    const { activate, connector } = useWeb3React();\r\n\r\n    const G = useSelector((state: BridgeTypes) => state);\r\n    const [isLoading, setIsLoadking] = React.useState(true);\r\n    React.useEffect(() => {\r\n        setTimeout(() => {\r\n            setIsLoadking(false);\r\n        }, 5000)\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n        let err = '';\r\n        try {\r\n            if (account && account.length) {\r\n                U.update({ status: CONNECTED, address: account, err: '' })\r\n                if (chainId === networks[G.chain].chainId) {\r\n                    return\r\n                } else {\r\n                    // err = ERR_CHAINID.replace(':chainId', String(chainId))\r\n                    U.update({ status: CONNECTED, address: '' })\r\n                }\r\n            } else {\r\n                U.update({ status: DISCONNECTED, err: '' })\r\n                err = ERR_NOACCOUNTS\r\n                return\r\n            }\r\n        } catch (error: any) {\r\n            err = '  ' + error.message\r\n            U.update({ err: err })\r\n        }\r\n\r\n    }, [account, chainId])\r\n\r\n\r\n    // Chain check\r\n    const ChainCheck = () => {\r\n        try {\r\n            if (G.targetChain === G.chain) {\r\n                U.update({ err: 'Can`t bridge on the same chain' })\r\n                return tips('Can`t bridge on the same chain')\r\n\r\n            } else {\r\n                U.update({ err: '' })\r\n            }\r\n            if (chainId === 80001 || chainId === 338 || chainId === 97 || chainId === 97) {\r\n                // Object.keys(networks).map((k: any) => {\r\n                //     if (Number(networks[k].chainId) === Number(chainId)) {\r\n                //         U.update({ err: '' })\r\n                //         throw new Error(\"error\");\r\n                //         return;\r\n                //     } else {\r\n                //     }\r\n                // })\r\n                return tips('Unsupported Network, Chain ID : ' + chainId + '- Please change network on your wallet')\r\n            }\r\n\r\n        } catch (error: any) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    React.useEffect(() => {\r\n        ChainCheck()\r\n    }, [G.chain])\r\n\r\n\r\n    const L = G.L;\r\n\r\n    const handleConnect = async (key: string) => {\r\n        try {\r\n            if (account && account.length > 0) {\r\n                U.update({ account: account, walletModal: !G.walletModal, status: CONNECTED });\r\n            }\r\n            await connect(key);\r\n            U.update({ walletModal: !G.walletModal });\r\n\r\n            // if (account !== undefined) {\r\n            //     dispatch({\r\n            //         type: \"disconnect_able\",\r\n            //         payload: true\r\n            //     });\r\n            // } else {\r\n            //     dispatch({\r\n            //         type: \"disconnect_able\",\r\n            //         payload: false\r\n            //     });\r\n            // }\r\n            //wallet modal cancel\r\n        } catch (err) {\r\n            console.log({ err });\r\n        }\r\n    };\r\n\r\n    const WalletModal = () => {\r\n        return (\r\n            <div className='modal-continer' >\r\n                <div className='modal-back' onClick={() => U.update({ walletModal: false })}></div>\r\n\r\n                <div className=\"modal-body wallet-modal\" >\r\n                    <div className='dis-f w10' style={{ justifyContent: 'flex-end' }}>\r\n                        <AiOutlineClose className='cu-po' onClick={() => U.update({ walletModal: false })} fontSize={'25px'} />\r\n                    </div>\r\n                    <div className='dis-f w10'>\r\n                        <text className='grey mt1 mb2' style={{ fontSize: '25px' }}>Connect Wallet</text>\r\n                    </div>\r\n                    <div className='justify fd-c'>\r\n                        <div className='wallet-icon-hover'>\r\n                            <a onClick={() => { handleConnect('injected'); U.update({ walletSelect: '/img/metamask.png' }) }}>\r\n                                <div className='wallet-option-box'>\r\n                                    <h4 className=''>\r\n                                        MetaMask\r\n                                    </h4>\r\n                                    <img src={'/img/metamask.png'} className='justify wallet-imgs' alt='Metamask' />\r\n                                </div>\r\n                            </a>\r\n                        </div>\r\n                        <div className='wallet-icon-hover'>\r\n                            <a onClick={() => { handleConnect('walletconnect'); U.update({ walletSelect: '/img/walletconnect.svg' }) }}>\r\n                                <div className='wallet-option-box'>\r\n                                    <h4 className=''>\r\n                                        WalletConnect\r\n                                    </h4>\r\n                                    <img src={'/img/walletconnect.svg'} className='justify wallet-imgs' alt='WalletConnect' />\r\n                                </div>\r\n                            </a>\r\n                        </div>\r\n                        <div className='justify'>\r\n                            <div className='wallet-icon-hover'>\r\n                                <a onClick={() => { handleConnect('walletlink'); U.update({ walletSelect: '/img/coinbase.png' }) }}>\r\n                                    <div className='wallet-option-box'>\r\n                                        <h4 className=''>\r\n                                            Coinbase Wallet\r\n                                        </h4>\r\n                                        <img src={'/img/coinbase.png'} className='justify wallet-imgs' alt='Coinbase' />\r\n                                    </div>\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (<>\r\n        {\r\n            isLoading\r\n                ? <div className='isloading'>\r\n                    <div className='loading-img justify'>\r\n                        <img src='/img/flash-logo.png' width={'70px'} className='' alt='' />\r\n                        <span style={{ fontSize: '30px', fontWeight: 'bold', color: '#e7c766' }}>FLASH</span>\r\n                    </div>\r\n\r\n                </div>\r\n                : <>\r\n                    <div className='dis-f fd-c' style={{ height: '100%' }}>\r\n                        <header className=\"dis-f jc-sb ai-c pr2\">\r\n                            <Link className=\"title justify\" to=\"/\">\r\n                                <div>\r\n                                    <img src=\"/flash-logo.png\" style={{ width: 50, height: 'auto' }} alt=\"logo\" />\r\n                                </div>\r\n                                <div className=\"dis-f\">\r\n                                    <span className=\"h3\" style={{ marginTop: '-7px' }}>{L['chain']}</span>\r\n                                </div>\r\n                                {/* <span className=\"badge\">{L['bridge']}</span> */}\r\n                            </Link>\r\n                            {\r\n                                G.status !== DISCONNECTED ?\r\n                                    <button onClick={() => { U.update({ walletModal: false, status: DISCONNECTED }) }} className='wallet-connect-btn'>\r\n                                        {\r\n                                            'Disconnect'\r\n                                        }\r\n                                    </button>\r\n                                    :\r\n                                    <button onClick={() => { U.update({ walletModal: true }) }} className='wallet-connect-btn'>\r\n                                        {\r\n                                            G.status === DISCONNECTED ? 'Connect Wallet' : account && account.slice(0, 5) + '...' + account.slice(account.length - 5, account.length)\r\n                                        }\r\n                                    </button>\r\n                            }\r\n\r\n                        </header>\r\n                        <main className='dis-f flex1 fd-c'>\r\n                            {props.children}\r\n                        </main>\r\n                        <footer className=\"footer-section\">\r\n                            <nav className=\"social-list\">\r\n                                <a href=\"https://twitter.com/Flash_Techno_Of\" target='_blank'> <img src=\"/social/twitter.svg\" alt=\"twitter\" /> </a>\r\n                                <a href=\"https://www.facebook.com/flashtechnologiesoff\" target='_blank'> <img src=\"/social/facebook.svg\" alt=\"facebook\" /> </a>\r\n                                <a href=\"https://www.reddit.com/r/FlashTechnologies/\" target='_blank'> <img src=\"/social/reddit.svg\" alt=\"reddit\" /> </a>\r\n                                <a href=\"https://t.me/flashtokenenglish\" target='_blank'> <img src=\"/social/telegram.svg\" alt=\"telegram\" /> </a>\r\n                                <a href=\"mailto:contact@flash-bridge.com\" target='_blank'> <img src=\"/social/mail.svg\" alt=\"mail\" /> </a>\r\n                                <a href=\"https://discord.gg/kkGDbGtTFz\" target='_blank'> <img src=\"/social/discord.svg\" alt=\"discord\" /> </a>\r\n                                <a href=\"https://www.youtube.com/channel/UCbNApPsnWrYixnri4hwUUyA\" target='_blank'> <img src=\"/social/youtube.svg\" alt=\"youtube\" /> </a>\r\n                                <a href=\"https://www.linkedin.com/company/flash-technologies-off/\" target='_blank'> <AiOutlineLinkedin color=\"white\" fontSize={'27px'} /> </a>\r\n                            </nav>\r\n                            <div className=\"dis-f ai-c jc-c w10 tc pb3\">© Copyright Flash Technologies 2022&nbsp;,&nbsp; <a className=\"\" href=\"https://linktr.ee/FlashTechnologies\" style={{ color: '#f0b90b' }}>FLASH LINK</a></div>\r\n                        </footer>\r\n                    </div>\r\n                    {G.walletModal === true\r\n                        ? <WalletModal />\r\n                        : <></>\r\n                    }\r\n                </>\r\n        }\r\n    </>);\r\n}\r\n\r\nexport default Layout;","import React, { useEffect, useRef } from 'react';\r\nimport Layout from '../components/Layout';\r\nimport Networks from '../config/networks.json';\r\nimport VirtualNetworks from \"../config/static_networks.json\";\r\nimport TokenList from \"../config/tokenlist.json\";\r\nimport { useWallet } from '../hooks/useWallet';\r\n\r\nimport useWallet_, { request, CONNECTED, CONNECTING, DISCONNECTED, ZERO, toEther, fromEther } from '../useWallet';\r\n/* import { getApiUrl } from '../util'; */\r\nimport { BsChevronDown } from \"react-icons/bs\";\r\nimport { AiFillStar, AiOutlineStar, AiTwotoneStar, AiOutlineUp, AiOutlineQuestionCircle } from \"react-icons/ai\";\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core';\r\nimport { useStore } from 'react-redux';\r\nimport \"./Home.scss\";\r\n\r\nconst ERR_NOACCOUNTS = 'No selected address.';\r\nconst ERR_CHAINID = 'Invalid chain id #:chainId';\r\n\r\nconst networks = Networks as { [chain: string]: NetworkTypes }\r\n\r\ninterface HomeStatus {\r\n\tquery: string\r\n\tsubmitLabel: string\r\n\tloading: boolean\r\n}\r\n\r\ninterface TransactionDetails {\r\n\tproviderFee: number\r\n\tprotocalFee: number\r\n\tslippage: number\r\n\tvalue: string\r\n\tfee: number\r\n\treceiveValue: number\r\n}\r\n\r\ninterface BaseStatus {\r\n\tprices: { [chain: string]: number }\r\n\tgasPrices: { [chain: string]: number }\r\n\tmaxGasLimit: number\r\n}\r\n\r\nconst Home = () => {\r\n\tconst { account } = useWeb3React();\r\n\tconst { active, connect, chainId } = useWallet();\r\n\tconst G = useWallet_();\r\n\tconst L = G.L;\r\n\tconst refMenu = React.useRef<HTMLUListElement>(null)\r\n\t// const refList = React.useRef<HTMLInputElement>(null)\r\n\tconst refAmount = React.useRef<HTMLInputElement>(null)\r\n\tconst [flashPrice, setFlashprice] = React.useState(Number);\r\n\tconst [countFlashPrice, setCountFlashPrice] = React.useState<Number>(flashPrice);\r\n\tconst [status, setStatus] = React.useState<HomeStatus>({\r\n\t\tquery: '',\r\n\t\tsubmitLabel: '',\r\n\t\tloading: false,\r\n\t})\r\n\r\n\tconst [txDetail, setTxDetail] = React.useState<TransactionDetails>({\r\n\t\tproviderFee: 0,\r\n\t\tprotocalFee: 0,\r\n\t\tslippage: 0,\r\n\t\tvalue: '',\r\n\t\tfee: 0,\r\n\t\treceiveValue: 0\r\n\t})\r\n\tconst set = (attrs: Partial<TransactionDetails>) => setTxDetail({ ...txDetail, ...attrs })\r\n\tconst [isPending, setPending] = React.useState(false);\r\n\t// const [issure, setIsSure] = React.useState(false);\r\n\tconst [noTargetChain, setNotargetChain] = React.useState(false);\r\n\tconst [tokenSelectModal, setTokenSelectModal] = React.useState(false);\r\n\tconst [isActive, setIsActive] = React.useState('');\r\n\tconst [isTransaction, setIsTransaction] = React.useState(false);\r\n\tconst [selectedTokenOnChain, setSelectedTokenOnChain] = React.useState({\r\n\t\tname: 'Token Select',\r\n\t\timg: ''\r\n\t});\r\n\tconst [selectedTokenOnTargetChain, setSelectedTokenOnTargetChain] = React.useState({\r\n\t\tname: 'Token Select',\r\n\t\timg: ''\r\n\t});\r\n\tconst [base, setBase] = React.useState<BaseStatus>({\r\n\t\tprices: {},\r\n\t\tgasPrices: {},\r\n\t\tmaxGasLimit: 1e5,\r\n\t})\r\n\r\n\tconst updateStatus = (json) => setStatus({ ...status, ...json })\r\n\r\n\tReact.useEffect(() => {\r\n\t\ttry {\r\n\t\t\tif (!G.inited && !G.loading) {\r\n\t\t\t\tG.update({ loading: true })\r\n\t\t\t\t// request('/get-all-tokens').then(response => {\r\n\t\t\t\t// \talert('backend call')\r\n\t\t\t\t// \tif (response && response.result) {\r\n\t\t\t\t// \t\tconst res = response.result\r\n\t\t\t\t// \t\tconsole.log(res)\r\n\t\t\t\t// \t\talert('res')\r\n\t\t\t\t// \t\tconst coins = {} as CoinTypes\r\n\t\t\t\t// \t\tfor (let chain in res) {\r\n\t\t\t\t// \t\t\tfor (let i in res[chain]) {\r\n\t\t\t\t// \t\t\t\tconst v = res[chain][i]\r\n\t\t\t\t// \t\t\t\tif (coins[v.symbol] === undefined)\r\n\t\t\t\t// \t\t\t\t\tcoins[v.symbol] = {}\r\n\r\n\t\t\t\t// \t\t\t\tcoins[v.symbol][chain.toUpperCase()] = { address: v.address, decimals: v.decimals }\r\n\t\t\t\t// \t\t\t}\r\n\t\t\t\t// \t\t}\r\n\t\t\t\t// \t\tcheckPending()\r\n\t\t\t\t// \t\tG.update({ coins, ...G.getPending(), inited: true, loading: false })\r\n\t\t\t\t// \t} else {\r\n\t\t\t\t// \t\talert('res no')\r\n\r\n\t\t\t\t// \t\tG.update({ loading: false })\r\n\t\t\t\t// \t}\r\n\t\t\t\t// })\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t}\r\n\t}, [])\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif (isPending) return;\r\n\t\tlet timer;\r\n\t\ttry {\r\n\t\t\ttimer = setTimeout(checkPending, 5000)\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t}\r\n\t\treturn () => timer && clearTimeout(timer)\r\n\t}, [isPending])\r\n\r\n\t// Chain check\r\n\tReact.useEffect(() => {\r\n\t\tif (G.targetChain === G.chain) {\r\n\t\t\tG.update({ err: 'Can`t bridge on the same chain' })\r\n\t\t\tupdateStatus({ loading: false })\r\n\t\t} else {\r\n\t\t\tG.update({ err: '' })\r\n\t\t\tupdateStatus({ loading: false })\r\n\t\t}\r\n\t\t// if (Number(G.chain) !== chainId) {\r\n\t\t// \tG.update({ err: 'Please change chain on your wallet. Connected chain ID : ' + chainId })\r\n\t\t// }\r\n\r\n\t}, [G.targetChain, G.chain])\r\n\r\n\t//network gas fee\r\n\tconst [time, setTime] = React.useState(+new Date())\r\n\tconst proxy = process.env.REACT_APP_ENDPOINT || '';\r\n\tReact.useEffect(() => {\r\n\t\tgetInfo()\r\n\t\tconst timer = setTimeout(() => setTime(+new Date()), 10000)\r\n\t\treturn () => clearTimeout(timer)\r\n\t}, [time, G.chain])\r\n\tconst getInfo = async () => {\r\n\t\ttry {\r\n\t\t\tconst res = await request('/get-gas-info', { chain: G.chain });\r\n\r\n\t\t\tconsole.log(res?.result);\r\n\t\t\tconsole.log(Math.round(+new Date() / 1000), res?.result)\r\n\t\t\tsetBase(res?.result);\r\n\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t}\r\n\t}\r\n\tconst getReceivedValue = (chain: string, targetChain: string, token: string, amount: number) => {\r\n\t\tif (base.gasPrices !== undefined) {\r\n\t\t\tconst feeEther = base.maxGasLimit * base.prices[chain] / 1e9\r\n\t\t\t// const decimals = networks[targetChain].decimals;\r\n\t\t\t// const fee = Number((feeEther * base.prices[targetChain] / flashPrice).toFixed(decimals < 6 ? decimals : 6))\r\n\t\t\t// if (!isNaN(fee)) {\r\n\t\t\t// const receiveValue = Number((amount - fee).toFixed(decimals < 6 ? decimals : 6))\r\n\t\t\t// return { receiveValue, fee }\r\n\t\t\t// }\r\n\t\t\treturn { feeEther }\r\n\t\t}\r\n\t\treturn { receiveValue: 0, fee: 0 }\r\n\t}\r\n\r\n\tconst onChangeValueOnChain = (value: string) => {\r\n\t\tconst { feeEther } = getReceivedValue(G.chain, G.targetChain, G.token, Number(value))\r\n\t\tconsole.log(feeEther);\r\n\t\tset({ value, receiveValue: Number(value), fee: feeEther })\r\n\t}\r\n\t// React.useEffect(async()=>{\r\n\t// \tlet estimateGas = await web3.eth.estimateGas({\t\r\n\t// \t\t\"value\": '0x0', // Only tokens\r\n\t// \t\t\"data\": contract.methods.transfer(toAddress, tokenAmount).encodeABI(),\r\n\t// \t\t\"from\": fromAddress,\r\n\t// \t\t\"to\": toAddress\r\n\t// \t});\r\n\t// },[])\r\n\tconst FLASHprice = async () => {\r\n\t\tconst url = \"https://api.coinmarketcap.com/data-api/v3/price-prediction/query/half-year?cryptoId=16978\";\r\n\t\tconst data = {\r\n\t\t\t'url': url\r\n\t\t}\r\n\t\tconst result = await request('/flash-coin-price', { data });\r\n\r\n\t\t// const result = await fetch('',\r\n\t\t// \t{\r\n\t\t// \t\tmethod: 'GET',\r\n\t\t// \t\theaders: { 'content-type': 'application/json' },\r\n\t\t// \t});\r\n\r\n\t\tconst priceresult: any = result;\r\n\t\t// priceresult.data.accuracyPoints[0].ypoint.settlementPrice\r\n\r\n\t\tconsole.log(' priceresult ');\r\n\t\tconsole.log(priceresult);\r\n\r\n\t\tsetFlashprice(priceresult.data.accuracyPoints[0].ypoint.settlementPrice.toFixed(8));\r\n\t\tsetCountFlashPrice(priceresult.data.accuracyPoints[0].ypoint.settlementPrice.toFixed(8))\r\n\t}\r\n\r\n\tconst InputChainInfo = async () => {\r\n\t\tconst token = G.token;\r\n\t\tconst info = G.flashcoins;\r\n\t\tconst result = await request('/input-chain-info', { info, token });\r\n\t\tconsole.log('InputChainInfo succeed');\r\n\r\n\t\tconsole.log(result);\r\n\t}\r\n\r\n\t// Input chain info \r\n\tReact.useEffect(() => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tFLASHprice();\r\n\t\t\tInputChainInfo()\r\n\t\t}, 2000)\r\n\t}, [])\r\n\r\n\r\n\tconst [fake_dis, setFake_dis] = React.useState(true);\r\n\tconst onChangeNetwork = (chain: string) => {\r\n\t\tChainActive(chain)\r\n\t\tconst _chain = 'chain'\r\n\t\tif (chain === 'CRO' || chain === 'POL' || chain === 'BSC' || chain === 'ETH') {\r\n\t\t\tsetFake_dis(true)\r\n\r\n\t\t\tconst net = networks[chain];\r\n\t\t\tconst chainId = net.chainId;\r\n\t\t\tconst rpc = net.rpc;\r\n\t\t\tG.update({ [_chain]: chain })\r\n\t\t\tG.update({ 'chainIdMatch': chainId, rpc })\r\n\t\t\tG.changeNetwork(chainId);\r\n\t\t} else {\r\n\t\t\tsetFake_dis(false)\r\n\t\t\t// G.update({ [_chain]: chain })\r\n\t\t}\r\n\r\n\t\t// if (refMenu && refMenu.current) {\r\n\t\t// \trefMenu.current.style.display = 'none'\r\n\t\t// \tsetTimeout(() => (refMenu && refMenu.current && (refMenu.current.style.display = '')), 100)\r\n\t\t// }\r\n\t}\r\n\tconst onChangeNetwork2 = (chain: string) => {\r\n\t\tChainActive(chain);\r\n\t\t// setIsSure(true);\r\n\t\tconst _chain = 'targetChain'\r\n\t\tif (chain === 'CRO' || chain === 'POL' || chain === 'BSC' || chain === 'ETH') {\r\n\t\t\tsetFake_dis(true)\r\n\r\n\r\n\t\t\tconst net = networks[chain];\r\n\t\t\tconst chainId = net.chainId;\r\n\t\t\tconst rpc = net.rpc;\r\n\t\t\tG.update({ [_chain]: chain, chainId })\r\n\r\n\t\t} else {\r\n\t\t\tsetFake_dis(false)\r\n\r\n\t\t\t// G.update({ [_chain]: chain })\r\n\t\t}\r\n\t}\r\n\r\n\tconst swapChains = async () => {\r\n\t\tconst net = networks[G.targetChain];\r\n\t\tconst chainId = net.chainId;\r\n\t\tconst rpc = net.rpc;\r\n\r\n\t\tconst res = await G.changeNetwork(chainId);\r\n\t\tconsole.log('swapChains');\r\n\t\tconsole.log(res);\r\n\t\tif (res) {\r\n\t\t\tG.update({ chain: G.targetChain, targetChain: G.chain, /* token, */ chainId, rpc })\r\n\t\t}\r\n\r\n\r\n\t}\r\n\tconst checkPending = async () => {\r\n\t\ttry {\r\n\t\t\tif (!isPending) {\r\n\t\t\t\tsetPending(true)\r\n\t\t\t\tconst params1: { [chainId: string]: Array<string> } = {};\r\n\t\t\t\tconst params2: Array<string> = [];\r\n\t\t\t\tfor (let k in G.pending) {\r\n\t\t\t\t\tconst v = G.pending[k]\r\n\t\t\t\t\tconst confirmations = G.txs[k]?.confirmations || 0\r\n\t\t\t\t\tif (networks[v.chain].confirmations > confirmations) {\r\n\t\t\t\t\t\tif (params1[v.chain] === undefined)\r\n\t\t\t\t\t\t\tparams1[v.chain] = []\r\n\t\t\t\t\t\tparams1[v.chain].push(k)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (G.txs[k] && !G.txs[k].err && !G.txs[k].tx)\r\n\t\t\t\t\t\t\tparams2.push(k)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (Object.keys(params1).length) {\r\n\t\t\t\t\tconst res = await Promise.all(Object.keys(params1).map(k => G.check(k, params1[k])))\r\n\t\t\t\t\tconst txs: TxTypes = { ...G.txs }\r\n\t\t\t\t\tconst now = Math.round(new Date().getTime() / 1000)\r\n\t\t\t\t\tfor (let v of res) {\r\n\t\t\t\t\t\tif (v) {\r\n\t\t\t\t\t\t\tfor (let k in v) {\r\n\t\t\t\t\t\t\t\tif (v[k] === -1) {\r\n\t\t\t\t\t\t\t\t\tif (now - G.pending[k].created > 600)\r\n\t\t\t\t\t\t\t\t\t\ttxs[k] = { ...txs[k], err: true }\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\ttxs[k] = { ...txs[k], confirmations: v[k] }\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tG.setTxs(txs)\r\n\t\t\t\t}\r\n\t\t\t\tif (params2.length) {\r\n\t\t\t\t\tconst rows = await request('/get-txs', params2)\r\n\t\t\t\t\tif (rows && Array.isArray(rows)) {\r\n\t\t\t\t\t\tconst now = Math.round(new Date().getTime() / 1000)\r\n\t\t\t\t\t\tconst txs: TxTypes = { ...G.txs }\r\n\t\t\t\t\t\tfor (let v of rows) {\r\n\t\t\t\t\t\t\tif (v.tx || (v.err && now - G.pending[v.key].created > 600)) {\r\n\t\t\t\t\t\t\t\ttxs[v.key] = { ...txs[v.key], tx: v.tx, err: v.err, fee: v.fee }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tG.setTxs(txs)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tsetPending(false)\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err)\r\n\t\t}\r\n\t}\r\n\t// const onChangeQuery = (query: string) => {\r\n\t// \tupdateStatus({ query })\r\n\t// }\r\n\t// const onChangeToken = (token: string) => {\r\n\t// \tG.update({ token })\r\n\t// \tif (refList && refList.current) {\r\n\t// \t\trefList.current.checked = false\r\n\t// \t}\r\n\t// }\r\n\tconst onChangeValue = (value: string) => {\r\n\t\tsetCountFlashPrice(Number(value) * flashPrice)\r\n\t\tG.update({ value })\r\n\t}\r\n\tconst submit = async () => {\r\n\t\ttry {\r\n\t\t\tconsole.log(G.targetChain, G.chain)\r\n\t\t\tif (G.targetChain !== G.chain) {\r\n\t\t\t\tif (G.status === CONNECTED) {\r\n\t\t\t\t\tconsole.log(G.token)\r\n\t\t\t\t\tconsole.log(G.chain);\r\n\t\t\t\t\tconsole.log(G.coins);\r\n\r\n\t\t\t\t\tconst token = G.flashcoins[G.chain];\r\n\t\t\t\t\tconst targetToken = G.flashcoins[G.targetChain];\r\n\r\n\t\t\t\t\tconst amount = Number(G.value)\r\n\t\t\t\t\tconst value = fromEther(amount, token.decimal)\r\n\r\n\t\t\t\t\tif (token && amount > 0) {\r\n\t\t\t\t\t\tG.update({ err: '' })\r\n\t\t\t\t\t\tupdateStatus({ loading: true, submitLabel: 'checking balance...' })\r\n\t\t\t\t\t\tconst rbalance = await G.balance(token.address)\r\n\t\t\t\t\t\t// const rbalance1 = G.targetChain === 'ICICB' ? value : await G.bridgebalance(G.targetChain, targetToken.address)\r\n\t\t\t\t\t\tconst rbalance1 = await G.bridgebalance(G.targetChain, targetToken.address)\r\n\t\t\t\t\t\tif (rbalance !== undefined && rbalance1 !== undefined) {\r\n\t\t\t\t\t\t\tconst balance = toEther(rbalance, token.decimal)\r\n\t\t\t\t\t\t\tconst balance1 = toEther(rbalance1, targetToken.decimal)\r\n\t\t\t\t\t\t\tif (balance >= amount) {\r\n\t\t\t\t\t\t\t\tif (balance1 >= amount) {\r\n\t\t\t\t\t\t\t\t\tlet success = true\r\n\t\t\t\t\t\t\t\t\tif (token.address !== '-') {//'-' is Native token address\r\n\t\t\t\t\t\t\t\t\t\tupdateStatus({ loading: true, submitLabel: 'checking allowance...' })\r\n\t\t\t\t\t\t\t\t\t\tconst rApproval = await G.approval(token.address)\r\n\t\t\t\t\t\t\t\t\t\tif (rApproval !== undefined) {\r\n\t\t\t\t\t\t\t\t\t\t\tconst approval = toEther(rApproval, token.decimal)\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('approval', approval, 'decimal', token.decimal)\r\n\t\t\t\t\t\t\t\t\t\t\tif (approval < amount) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tupdateStatus({ loading: true, submitLabel: 'allow bridge contract ...' })\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet tx = await G.approve(token.address, value)\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (tx !== undefined) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsuccess = await G.waitTransaction(tx)\r\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsuccess = false\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tsuccess = false\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (success) {\r\n\t\t\t\t\t\t\t\t\t\tupdateStatus({ loading: true, submitLabel: 'exchanging...' })\r\n\t\t\t\t\t\t\t\t\t\tconst tx = await G.deposit(token.address === '-' ? ZERO : token.address, value, networks[G.targetChain].chainId)\r\n\t\t\t\t\t\t\t\t\t\tif (tx !== undefined) {\r\n\t\t\t\t\t\t\t\t\t\t\tupdateStatus({ loading: true, submitLabel: 'confirming...' })\r\n\t\t\t\t\t\t\t\t\t\t\tG.setPending(tx, { chain: G.chain, targetChain: G.targetChain, address: G.address, token: G.token, value: amount, created: Math.round(new Date().getTime() / 1000) })\r\n\t\t\t\t\t\t\t\t\t\t\tawait G.waitTransaction(tx)\r\n\t\t\t\t\t\t\t\t\t\t\tG.update({ value: '' })\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tG.update({ err: 'the transaction failed' })\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tG.update({ err: \"Sorry, there is not enough balance in the bridge store for swap.\" })\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tG.update({ err: \"You haven't enough balance for swap\" })\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (refAmount?.current) {\r\n\t\t\t\t\t\trefAmount.current.focus()\r\n\t\t\t\t\t}\r\n\t\t\t\t\tupdateStatus({ loading: false })\r\n\t\t\t\t} else {\r\n\t\t\t\t\tupdateStatus({ submitLabel: 'Connecting...' })\r\n\t\t\t\t\tG.connect()\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tG.update({ err: 'Can`t bridge on the same chain' })\r\n\t\t\t\tupdateStatus({ loading: false })\r\n\t\t\t}\r\n\t\t} catch (err: any) {\r\n\t\t\tG.update({ err: err.message })\r\n\t\t\tupdateStatus({ loading: false })\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// @ts-ignore\r\n\tconst chainSelectActive = useRef(null);\r\n\r\n\t// for design effect\r\n\tconst ChainActive = (id: any) => {\r\n\t\tconsole.log(id);\r\n\t\tif (isActive !== '') {\r\n\t\t\twindow.document.getElementById(`${isActive}`)?.classList.remove('active');\r\n\t\t}\r\n\t\tif (id !== '') {\r\n\t\t\tsetIsActive(id);\r\n\t\t\twindow.document.getElementById(`${id}`)?.classList.add('active');\r\n\t\t}\r\n\t\t// chainSelectActive.id.classList.toggle('active');\r\n\t}\r\n\tconst TokenSelectNameImageUpdate = (value: string, para: boolean) => {\r\n\t\tif (para) {\r\n\t\t\tsetSelectedTokenOnChain({ name: value, img: value.toLocaleLowerCase() });\r\n\t\t} else {\r\n\t\t\tsetSelectedTokenOnTargetChain({ name: value, img: value.toLocaleLowerCase() });\r\n\t\t}\r\n\r\n\t}\r\n\tconst CallTokenSelect = (value: string, para: boolean) => {\r\n\t\tsetTokenSelectModal(false);\r\n\t\tTokenSelectNameImageUpdate(value, para);\r\n\t}\r\n\r\n\tconst TokenSelect = (para: boolean) => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className='token-select-modal'>\r\n\t\t\t\t\t<div className='token-select-modal-bg' onClick={() => setTokenSelectModal(false)}></div>\r\n\t\t\t\t\t<div className='token-select-modal-body'>\r\n\t\t\t\t\t\t<div className='p2'>\r\n\t\t\t\t\t\t\t<div className='justify p1'>\r\n\t\t\t\t\t\t\t\t<div className=''>\r\n\t\t\t\t\t\t\t\t\t<h3 style={{ margin: '0', color: '#f3ba2f' }}>\r\n\t\t\t\t\t\t\t\t\t\tToken List\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='token-select-modal-cancel' onClick={() => setTokenSelectModal(false)}>\r\n\t\t\t\t\t\t\t\t\tX\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{/* <div className='justify p1'>\r\n\t\t\t\t\t\t\t\t<div className=''>\r\n\t\t\t\t\t\t\t\t\t<input placeholder='Search name or paste address' />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t<div className='col-sm-4 col-md-4' style={{ borderTop: '1px grey solid' }}>\r\n\t\t\t\t\t\t\t\t<div className='mobile-res border-right-top-10 dis-f jc-sb fw-w over-h w10' style={{ background: '#2b2d2c', padding: '10px', height: `${window.innerWidth <= 567 ? window.innerHeight - 90 : '100%'}px` }}>\r\n\t\t\t\t\t\t\t\t\t{/* virtual networks */}\r\n\t\t\t\t\t\t\t\t\t{Object.keys(VirtualNetworks).map(k =>\r\n\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t<a key={k} className='justify fd-c' style={{ width: '80px' }} onClick={(e: any) => para ? onChangeNetwork(k) : onChangeNetwork2(k)}>\r\n\t\t\t\t\t\t\t\t\t\t\t<li ref={chainSelectActive} id={k} className={'chain-select justify w10'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img style={{ borderRadius: '50%' }} className=\"icon\" width={'28px'} height={'28px'} src={`/networks/${VirtualNetworks[k].img}`} alt={k} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>{L['chain.' + k.toLowerCase()]}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='col-sm-8 col-md-8 pr1 pl1' style={{ borderTop: '1px grey solid' }}>\r\n\t\t\t\t\t\t\t\t{fake_dis ?\r\n\t\t\t\t\t\t\t\t\tObject.keys(TokenList).map((key, index) =>\r\n\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t<div key={index} className='justify pr1'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div onClick={() => CallTokenSelect(key, para)} className='justify mt2 w10 token-hover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='justify'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img className=\"icon\" width={'60px'} src={`/select-token/${key.toLocaleLowerCase()}.png`} alt={key} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 className='' style={{ margin: '0', padding: '0' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{key} <br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTokenList[key].name\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='pr1'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<AiOutlineStar fontSize={'30px'} color='yellow' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)) : <></>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\tconst pendingTxs: Array<any> = [];\r\n\tconst targetToken = G.coins[G.token] && G.coins[G.token][G.targetChain]\r\n\tconst supported = targetToken !== undefined;\r\n\r\n\t// const erc20 = networks[G.chain].erc20;\r\n\t// const query = status.query.toLowerCase();\r\n\r\n\r\n\tfor (let k in G.pending) {\r\n\t\tpendingTxs.push({ key: k, ...G.pending[k] })\r\n\t}\r\n\tpendingTxs.sort((a, b) => b.created - a.created)\r\n\r\n\t// const nativeCoin = networks[G.chain].coin\r\n\t// const tokenArray: Array<string> = [nativeCoin];\r\n\t// for (let k in G.coins) {\r\n\t// \tif (k === nativeCoin) continue\r\n\t// \tconst v = G.coins[k]\r\n\t// \tif (v[G.chain] !== undefined && v[G.targetChain] !== undefined) {\r\n\t// \t\tif (query !== '' && k.toLowerCase().indexOf(query) === -1) continue\r\n\t// \t\ttokenArray.push(k)\r\n\t// \t}\r\n\t// }\r\n\tlet loading = G.status === CONNECTING || status.loading;\r\n\r\n\r\n\t// Wallet connect monitor\r\n\tReact.useEffect(() => {\r\n\t\tlet err = '';\r\n\t\ttry {\r\n\t\t\tif (account && account.length) {\r\n\t\t\t\tG.update({ address: account, err: '' })\r\n\t\t\t\tif (chainId === networks[G.chain].chainId) {\r\n\t\t\t\t\tG.update({ status: CONNECTED, address: account, err: '' })\r\n\t\t\t\t\treturn\r\n\t\t\t\t} else {\r\n\t\t\t\t\terr = ERR_CHAINID.replace(':chainId', String(chainId))\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\terr = ERR_NOACCOUNTS\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t} catch (error: any) {\r\n\t\t\terr = '  ' + error.message\r\n\t\t}\r\n\t\tG.update({ status: DISCONNECTED, address: '', err })\r\n\r\n\t}, [account])\r\n\r\n\r\n\r\n\treturn <Layout className=\"home\">\r\n\t\t<section>\r\n\t\t\t<div className=\"c ml3-md\">\r\n\t\t\t\t<div className=\"panel swap\">\r\n\t\t\t\t\t<div className='justify'>\r\n\t\t\t\t\t\t<div className='justify'>\r\n\t\t\t\t\t\t\t<div className='justify'>\r\n\t\t\t\t\t\t\t\t<img alt='' style={{ width: '35px' }} src={`./networks/${G.chain}.svg`} ></img>\r\n\t\t\t\t\t\t\t\t<img alt='' style={{ width: '39px', marginLeft: '-13px', border: '3px black solid', borderRadius: '50%' }} src={`./networks/${G.targetChain}.svg`} ></img>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='ml1'>\r\n\t\t\t\t\t\t\t\t<div className='justify'>\r\n\t\t\t\t\t\t\t\t\t<span className={`chain-font opa1i`}>\r\n\t\t\t\t\t\t\t\t\t\tMultichain\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='justify'>\r\n\t\t\t\t\t\t\t\t\t<span className='chain-font'>{G.chain}</span>\r\n\t\t\t\t\t\t\t\t\t<span className='chain-font'>&nbsp;&nbsp;to&nbsp;&nbsp;</span>\r\n\t\t\t\t\t\t\t\t\t<span className='chain-font'>{G.targetChain}</span>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=''>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* <div className=\"flex\">\r\n\t\t\t\t\t\t<div className=\"c\">\r\n\t\t\t\t\t\t\t{ViewNetwork(G.chain)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"c\">\r\n\t\t\t\t\t\t\t{ViewNetwork2(G.targetChain)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div> */}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttokenSelectModal === true && <>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tnoTargetChain ? TokenSelect(true) : TokenSelect(false)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<div className=\"dis-f jc-sb mt2\">\r\n\t\t\t\t\t\t<div className=''>\r\n\t\t\t\t\t\t\t<button onClick={() => { setNotargetChain(true); setTokenSelectModal(true); }} className='token-select-btn'>\r\n\t\t\t\t\t\t\t\t<div className='justify'>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tselectedTokenOnChain.img ? <img style={{ width: '20px', height: '20px' }} alt={selectedTokenOnChain.name} src={`/select-token/${selectedTokenOnChain.img}.png`} /> : <></>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t\t\t{selectedTokenOnChain.name}\r\n\t\t\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t\t\t<BsChevronDown color='yellow' />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='dis-f fd-c'>\r\n\t\t\t\t\t\t\t<input ref={refAmount} className=\"amount tr\" type=\"input\" value={G.value} onChange={(e) => { onChangeValue(e.target.value); onChangeValueOnChain(e.target.value) }} />\r\n\t\t\t\t\t\t\t<div className='tr input-price'>{countFlashPrice} $</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"mt2\">\r\n\t\t\t\t\t\t<div className='po-re before-af w10'>\r\n\t\t\t\t\t\t\t<div className='swap-switcher'>\r\n\t\t\t\t\t\t\t\t<button onClick={() => swapChains()} className='switcher'>\r\n\t\t\t\t\t\t\t\t\t<img src='./img/swap.svg' alt=''></img>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"dis-f jc-sb mt6\">\r\n\t\t\t\t\t\t<div className=''>\r\n\t\t\t\t\t\t\t<button onClick={() => { setNotargetChain(false); setTokenSelectModal(true); }} className='token-select-btn'>\r\n\t\t\t\t\t\t\t\t<div className='justify'>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tselectedTokenOnTargetChain.img ? <img style={{ width: '20px', height: '20px' }} alt={selectedTokenOnTargetChain.name} src={`/select-token/${selectedTokenOnTargetChain.img}.png`} /> : <></>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t\t\t{selectedTokenOnTargetChain.name}\r\n\t\t\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t\t\t<BsChevronDown color='yellow' />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='dis-f fd-c'>\r\n\t\t\t\t\t\t\t<input ref={refAmount} className=\"amount tr\" type=\"input\" value={G.value} onChange={(e) => onChangeValue(e.target.value)} />\r\n\t\t\t\t\t\t\t<div className='tr input-price'>{countFlashPrice} $</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='justify po-re mt5 pr2 pl2'>\r\n\t\t\t\t\t\t<div className='dis-f fd-c jc-c ai-c tc'>\r\n\t\t\t\t\t\t\t<img alt='' className='mauto' src='/flash-logo.png' width={'35px'} />\r\n\t\t\t\t\t\t\t<span className='chain-font'>{G.chain}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='flex1 dis-f fd-c jc-c ai-c tc'>\r\n\t\t\t\t\t\t\t<div className='dashboard-line'></div>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='dis-f fd-c jc-c ai-c tc po-re'>\r\n\t\t\t\t\t\t\t<img alt='' className='mauto' src='/flash-logo.png' width={'35px'} />\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<span className='chain-font flash-bridge'>Bridge</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='flex1 dis-f fd-c jc-c ai-c tc'>\r\n\t\t\t\t\t\t\t<div className='dashboard-line'></div>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='dis-f fd-c jc-c ai-c tc'>\r\n\t\t\t\t\t\t\t<img alt='' className='mauto' src='/flash-logo.png' width={'35px'} />\r\n\t\t\t\t\t\t\t<span className='chain-font'>{G.targetChain}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{G.inited ? (\r\n\t\t\t\t\t\t!supported ? (\r\n\t\t\t\t\t\t\t<p style={{ color: 'red', backgroundColor: '#2b2f36', padding: 10 }}>{`We do not support ${L['chain.' + G.targetChain.toLowerCase()]}'s ${G.token} swap now.`}</p>\r\n\t\t\t\t\t\t) : null\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t\t{/* <p style={{ color: 'red', backgroundColor: '#2b2f36', padding: 10 }}>{`We do not support ${G.targetChain}`}</p> */}\r\n\r\n\t\t\t\t\t{/* <div className=\"label\" style={{ paddingTop: 20 }}>Amount</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<input ref={refAmount} className=\"amount\" type=\"number\" value={G.value} onChange={(e) => onChangeValue(e.target.value)} />\r\n\t\t\t\t\t</div> */}\r\n\r\n\t\t\t\t\t{G.value !== '' && targetToken ? (\r\n\t\t\t\t\t\t<p className=\"gray\">You will receive ≈ {G.value} {G.token === '-' ? networks[G.chain].coin : G.token} <small>({targetToken.address === '-' ? 'native token' : networks[G.targetChain].erc20})</small></p>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t\t<div style={{ paddingTop: 20 }}>\r\n\t\t\t\t\t\t<button disabled={loading || supported || G.targetChain === G.chain} className=\"primary full\" onClick={submit}>\r\n\t\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t\t<div className=\"flex middle\">\r\n\t\t\t\t\t\t\t\t\t<div style={{ width: '1.5em' }}>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"loader\">Loading...</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>{status.submitLabel}</div>\r\n\t\t\t\t\t\t\t\t</div>) : (G.status === CONNECTED ? 'SUBMIT' : 'Connect wallet')\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t{G.status === CONNECTED ?\r\n\t\t\t\t\t\t\t(G.err ? (\r\n\t\t\t\t\t\t\t\t<div className='dis-f ai-c'>\r\n\t\t\t\t\t\t\t\t\t<img src={G.walletSelect} width='20px' height='20px' alt={G.walletSelect} />\r\n\t\t\t\t\t\t\t\t\t<p style={{ color: 'red', padding: 10 }}>{G.err}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<p style={{ color: '#35ff35' }}>{G.address ? 'Your wallet: ' + G.address.slice(0, 10) + '...' + G.address.slice(-4) : ''}</p>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t: <></>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{G.status === CONNECTED || G.address.length > 0 ? <>\r\n\t\t\t\t\t\t{pendingTxs.length ? (\r\n\t\t\t\t\t\t\t<div style={{ paddingTop: 20 }}>\r\n\t\t\t\t\t\t\t\t<p><b className=\"label\">Your transactions:</b></p>\r\n\t\t\t\t\t\t\t\t<div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n\t\t\t\t\t\t\t\t\t{pendingTxs.map((v, k) => (\r\n\t\t\t\t\t\t\t\t\t\t<div className={\"tx flex\" + (G.txs[v.key]?.tx ? '' : ' pending')} key={k}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"c1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={`/networks/${v.chain}.svg`} style={{ border: '1px white solid', borderRadius: '50%', width: 16, height: 16, marginRight: 5 }} alt={v.chain} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span> To </span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={`/networks/${v.targetChain}.svg`} style={{ border: '1px white solid', borderRadius: '50%', width: 16, height: 16, marginLeft: 5 }} alt={v.targetChain} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<code className=\"c2\"><a className=\"cmd\" href={networks[v.chain].explorer + '/tx/' + v.key} target=\"_blank\" rel=\"noreferrer\" >{v.key.slice(0, 10) + '...' + v.key.slice(-4)}</a></code>\r\n\t\t\t\t\t\t\t\t\t\t\t<code className=\"c3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={`/flash-logo.png`} loading='lazy' style={{ width: 20, height: 20, marginRight: 5 }} alt={v.token} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span title={G.txs[v.key]?.fee || ''}>{v.value}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</code>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"c4\" style={{ textAlign: \"right\" }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{G.txs[v.key] ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tG.txs[v.key].tx ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"cmd\" href={networks[v.targetChain].explorer + '/tx/' + G.txs[v.key].tx} target=\"_blank\" rel=\"noreferrer\">view result</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tG.txs[v.key].err ? (<code style={{ color: 'red' }}>error</code>) :\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<code style={{ color: '#76808f' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{G.txs[v.key].confirmations >= networks[v.chain].confirmations ? 'processing…' : G.txs[v.key].confirmations + ' / ' + networks[v.chain].confirmations}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</code>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : <code style={{ color: '#76808f' }}>confirming...</code>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</> : <></>}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\r\n\t\t{/* if G.address&&token is selected */}\r\n\t\t{G.address && G.address.length > 0 && G.status === CONNECTED &&\r\n\t\t\t<section>\r\n\t\t\t\t<div className=\"c ml3-md\">\r\n\t\t\t\t\t<div className={`panel2 transaction-detail ${isTransaction ? 'trans-bg' : ''}`}>\r\n\t\t\t\t\t\t<div className='top-section tc dis-f'>\r\n\t\t\t\t\t\t\t<a onClick={() => { setIsTransaction(!isTransaction) }} className='dis-f ai-c mauto'>\r\n\t\t\t\t\t\t\t\t<AiOutlineUp style={{ fontSize: '20px', cursor: 'pointer' }} color='#f0b90b' />\r\n\t\t\t\t\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t<span style={{ color: '#f0b90b' }} className='chain-font cu-po'>Transaction details</span>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={`transaction-effect ${isTransaction ? 'transaction-show' : 'transaction-none'}`}>\r\n\t\t\t\t\t\t\t<div className='middle-section'>\r\n\t\t\t\t\t\t\t\t<div className='justify mt1 mb1'>\r\n\t\t\t\t\t\t\t\t\t<div className='justify'>\r\n\t\t\t\t\t\t\t\t\t\t<span className={`chain-font opa1i ${txDetail.fee === 0 ? 'main-color' : ''}`}> Network fee </span>\r\n\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t<div className='tooltip justify'>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"tooltiptext\">Gas fee in target network taken instabletoken of source</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<AiOutlineQuestionCircle color='#f0b90b' fontSize={'22px'} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<span className={`chain-font opa1i ${txDetail.fee === 0 ? 'main-color' : ''}`}>\r\n\t\t\t\t\t\t\t\t\t\t{txDetail.fee}&nbsp;{networks[G.chain].coin}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className='justify mt1 mb1'>\r\n\t\t\t\t\t\t\t\t\t<div className='justify'>\r\n\t\t\t\t\t\t\t\t\t\t<span className={`chain-font opa1i ${txDetail.providerFee === 0 ? 'main-color' : ''}`}> Provider fee </span>\r\n\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t<div className='tooltip justify'>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"tooltiptext\"> We don't require a provider fee for users</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<AiOutlineQuestionCircle color='#f0b90b' fontSize={'22px'} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<span className={`chain-font opa1i ${txDetail.providerFee === 0 ? 'main-color' : ''}`}> {txDetail.providerFee}% </span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className='justify mt1 mb1'>\r\n\t\t\t\t\t\t\t\t\t<div className='justify'>\r\n\t\t\t\t\t\t\t\t\t\t<span className={`chain-font opa1i ${txDetail.protocalFee === 0 ? 'main-color' : ''}`}> Protocal fee </span>\r\n\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t<div className='tooltip justify'>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"tooltiptext\">We don't require a protocal fee for users</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<AiOutlineQuestionCircle color='#f0b90b' fontSize={'22px'} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<span className={`chain-font opa1i ${txDetail.protocalFee === 0 ? 'main-color' : ''}`}> {txDetail.protocalFee}% </span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t{/* <div className='justify mt1 mb1'>\r\n\t\t\t\t\t\t\t\t\t<div className='justify'>\r\n\t\t\t\t\t\t\t\t\t\t<span className={`chain-font opa1i`}> 1212 </span>\r\n\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t<div className='tooltip justify'>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"tooltiptext\">please write readme</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<AiOutlineQuestionCircle color='#f0b90b' fontSize={'22px'} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<span className={`chain-font opa1i`}> Multichain </span>\r\n\t\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='ml1 bottom-section'>\r\n\t\t\t\t\t\t\t\t<div className='justify'>\r\n\t\t\t\t\t\t\t\t\t<span className='chain-font'>You will receive {G.token} token at this address</span>\r\n\t\t\t\t\t\t\t\t\t<div className='justify'>\r\n\t\t\t\t\t\t\t\t\t\t<a className='chain-font white' href={`https://bscscan.com/address/${G.address}`} target={'_blank'}>\r\n\t\t\t\t\t\t\t\t\t\t\t{G.address &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='chain-font'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{G.address.slice(0, 5) + '...' + G.address.slice(G.address.length - 5, G.address.length)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t<a href={`https://bscscan.com/address/${G.address}`} target={'_blank'}>\r\n\t\t\t\t\t\t\t\t\t\t\t<img src='/img/scan.png' style={{ borderRadius: '50%', border: '0px black solid' }} width='25px' height='25px' alt='scan logo'></img>\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t}\r\n\t</Layout>;\r\n};\r\n\r\nexport default Home;\r\n\r\n// ,\r\n//     \"CRONOS-TEST\": {\r\n//         \"bridge\": \"\",\r\n//         \"chainId\": 338,\r\n//         \"coin\": \"tCRO\",\r\n//         \"decimals\": 18,\r\n//         \"confirmations\": 12,\r\n//         \"blocktime\": 3000,\r\n//         \"rpc\": \"https://evm-t3.cronos.org\",\r\n//         \"explorer\": \"https://cronos.org/explorer/testnet3\",\r\n//         \"erc20\": \"BEP20\"\r\n//     }","import React from 'react';\r\n\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from './Pages/Home';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path=\"/\" component={Home}></Route>\r\n\t\t\t\t<Route path=\"*\" component={Home}></Route>\r\n\t\t\t</Switch>\r\n\t\t\t<ToastContainer />\r\n\t\t</BrowserRouter>\r\n\t\t// \r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Web3ReactProvider } from '@web3-react/core';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { Web3Provider } from '@ethersproject/providers';\r\n\r\nimport Slice from './reducer'\r\n\r\nconst store = configureStore({ reducer: Slice.reducer });\r\n\r\nrequire('dotenv').config();\r\nfunction getLibrary(provider: any) {\r\n\tconst library = new Web3Provider(provider);\r\n\tlibrary.pollingInterval = 12000;\r\n\treturn library;\r\n}\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<React.StrictMode>\r\n\t\t\t<Web3ReactProvider getLibrary={getLibrary}>\r\n\t\t\t\t<App />\r\n\t\t\t</Web3ReactProvider>\r\n\t\t</React.StrictMode>\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}